@using PinPoint.Models.PainEntries
@model IEnumerable<PainEntryReadOnlyVM>

@{
    ViewData["Title"] = "Pain Entry";
}

<h1>Daily Pain Entry</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Add New Pain Entry</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EntryDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EntryTime)
            </th>
            <th>
                Symptoms
            </th>
            <th>
                Locations
            </th>
            <th>
                Triggers
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PainIntensity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PainDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ActivitiesBeforePain)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReliefMethodsTried)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReliefEffectiveness)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdditionalNotes)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EntryDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EntryTime)
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.SymptomNames))
                {
                    var symptoms = item.SymptomNames.Split(',', StringSplitOptions.RemoveEmptyEntries)
                    .Select(s => s.Trim());
                    foreach (var symptom in symptoms)
                    {
                        <span class="badge bg-secondary me-1 mb-1">@symptom</span>
                    }
                }
                else
                {
                    <span class="text-muted">—</span>
                }
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.LocationNames))
                {
                    var locations = item.LocationNames.Split(',', StringSplitOptions.RemoveEmptyEntries)
                    .Select(l => l.Trim());
                    foreach (var location in locations)
                    {
                        <span class="badge bg-info me-1 mb-1">@location</span>
                    }
                }
                else
                {
                    <span class="text-muted">—</span>
                }
            </td>
            <td>
                @if (!string.IsNullOrWhiteSpace(item.TriggerNames))
                {
                    var triggers = item.TriggerNames.Split(',', StringSplitOptions.RemoveEmptyEntries)
                    .Select(t => t.Trim());
                    foreach (var trigger in triggers)
                    {
                        <span class="badge bg-warning text-dark me-1 mb-1">@trigger</span>
                    }
                }
                else
                {
                    <span class="text-muted">—</span>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PainIntensity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PainDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ActivitiesBeforePain)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReliefMethodsTried)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReliefEffectiveness)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdditionalNotes)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
