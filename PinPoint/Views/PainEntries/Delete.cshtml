@using PinPoint.Models.PainEntries
@model PainEntryReadOnlyVM

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>PainEntry</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EntryDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EntryDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EntryTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EntryTime)
        </dd>
        <dd class="col-sm-2 fw-bold">
            @Html.DisplayNameFor(model => model.SymptomNames)
        </dd>
        <dt class="col-sm-10">
            @if (!string.IsNullOrWhiteSpace(Model.SymptomNames))
            {
                <span class="badge bg-primary">@Model.SymptomNames</span>
            }
            else
            {
                <span class="text-muted">No symptom recorded</span>
            }
        </dt>
        <dd class="col-sm-2 fw-bold">
            @Html.DisplayNameFor(model => model.LocationNames)
        </dd>
        <dt class="col-sm-10">
            @if (!string.IsNullOrWhiteSpace(Model.LocationNames))
            {
                <span class="badge bg-primary">@Model.LocationNames</span>
            }
            else
            {
                <span class="text-muted">No location recorded</span>
            }
        </dt>
        <dd class="col-sm-2 fw-bold">
            @Html.DisplayNameFor(model => model.TriggerNames)
        </dd>
        <dt class="col-sm-10">
            @if (!string.IsNullOrWhiteSpace(Model.TriggerNames))
            {
                <span class="badge bg-primary">@Model.TriggerNames</span>
            }
            else
            {
                <span class="text-muted">No trigger recorded</span>
            }
        </dt>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PainIntensity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PainIntensity)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PainDescription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PainDescription)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ActivitiesBeforePain)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ActivitiesBeforePain)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReliefMethodsTried)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReliefMethodsTried)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ReliefEffectiveness)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReliefEffectiveness)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AdditionalNotes)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AdditionalNotes)
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
